#!groovy
//Only one build can run
properties([disableConcurrentBuilds()])

pipeline {
  agent {
    label 'master'
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    timestamps()
  }
  parameters {
    booleanParam(name: 'UpdateALB', defaultValue: false, description: '')
    choice(name: 'BlueWeight', choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], description: '')
    choice(name: 'GreenWeight', choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], description: '')
    booleanParam(name: 'RemovePreviousVersion', defaultValue: false, description: '')
  }
  environment {
    OPSRepoURL = 'git@github.com:IYermakov/DevOpsA3Training.git'
    AWSRegion = 'us-east-1'
    OPSRepoBranch = 'weighted-tgs'
    BlueWeight = "${params.BlueWeight}"
    GreenWeight = "${params.GreenWeight}"
    RemoveStack = "${params.RemovePreviousVersion}"
  }
  stages {
    stage("Update ALB stack") {
      when { environment name: 'UpdateALB', value: 'true' }
      steps {
        script {
          try {
            sh "rm -rf ${OPSRepoBranch}"
            sh "mkdir -p ${OPSRepoBranch}"
            dir("${OPSRepoBranch}") {
              git(url: "${OPSRepoURL}", branch: "${OPSRepoBranch}", credentialsId: "devopsa3")
              sh "aws cloudformation deploy --stack-name alb --template-file ops/cloudformation/alb.yml --parameter-overrides BlueWeight=${BlueWeight} GreenWeight=${GreenWeight}  --capabilities CAPABILITY_IAM --region ${AWSRegion}"
            }
            currentBuild.result = 'SUCCESS'
          }
          catch (err) {
            sh "pwd && rm -rf ${OPSRepoBranch}"
            currentBuild.result = 'FAILURE'
            throw (err)
          }
          echo "result is: ${currentBuild.currentResult}"
        }
      }
    }
    stage("Remove Previous Version") {
      when { environment name: 'RemoveStack', value: 'true' }
      steps {
        script {
          try {
            dir("${OPSRepoBranch}") {
              git(url: "${OPSRepoURL}", branch: "${OPSRepoBranch}", credentialsId: "devopsa3")
              sh """
                StackToRemove=\$(aws cloudformation describe-stacks --output text --query "Stacks[?contains(StackName,'ECS-task')].[StackName]" --region ${AWSRegion} | tail -1)
                Color=\$(aws cloudformation describe-stacks --stack-name \$StackToRemove --query "Stacks[].Parameters[?ParameterKey=='DeploymentColor'].ParameterValue" --output text --region ${AWSRegion} | tail -1)
                if [ \$Color == "Green" ]
                    then
                        GreenWeight="0"
                        BlueWeight="1"
                    else
                        GreenWeight="1"
                        BlueWeight="0"
                fi
                aws cloudformation deploy --stack-name alb --template-file ops/cloudformation/alb.yml --parameter-overrides VPCStackName=DevVPC BlueWeight=\$BlueWeight GreenWeight=\$GreenWeight  --capabilities CAPABILITY_IAM --region ${AWSRegion}  || echo "ALB stack was not updated. WEB stack will be deleted."
                aws cloudformation delete-stack --stack-name \$StackToRemove --region ${AWSRegion}
                """
            }
            currentBuild.result = 'SUCCESS'
          }
          catch (err) {
            currentBuild.result = 'FAILURE'
            throw (err)
          }
          echo "result is: ${currentBuild.currentResult}"
        }
      }
    }
  }
}
