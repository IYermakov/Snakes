#!groovy
//Only one build can run
properties([disableConcurrentBuilds()])

pipeline {
  agent {
    label 'master'
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    timestamps()
  }
  parameters {
    booleanParam(name: 'UpdateALB', defaultValue: false, description: '')
    choice(name: 'BlueWeight', choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], description: '')
    choice(name: 'GreenWeight', choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], description: '')
    booleanParam(name: 'RemovePreviousVersion', defaultValue: false, description: '')
    string(defaultValue: 'ECS-task-0-0-0', description: 'The name of the Stack to be deleted', name: 'StackName')
  }
  environment {
    OPSRepoURL = 'git@github.com:IYermakov/DevOpsA3Training.git'
    OPSRepoBranch = 'weighted-tgs'
    RemoveStack = "${params.RemovePreviousVersion}"
    StackName = "${params.StackName}"
  }
  stages {
    stage("Update ALB stack") {
      when { environment name: 'UpdateALB', value: 'true' }
      steps {
        script {
          try {
            sh "rm -rf ${OPSRepoBranch}"
            sh "mkdir -p ${OPSRepoBranch}"
            dir("${OPSRepoBranch}") {
              git(url: "${OPSRepoURL}", branch: "${OPSRepoBranch}", credentialsId: "devopsa3")
              sh "aws cloudformation deploy --stack-name alb --template-file ops/cloudformation/ECS/alb.yml --parameter-overrides VPCStackName=DevVPC BlueWeight=9 GreenWeight=1  --capabilities CAPABILITY_IAM --region us-east-1"
            }
            currentBuild.result = 'SUCCESS'
          }
          catch (err) {
            sh "pwd && rm -rf ${OPSRepoBranch}"
            currentBuild.result = 'FAILURE'
            throw (err)
          }
          echo "result is: ${currentBuild.currentResult}"
        }
      }
    }
    stage("Remove Previous Version") {
      when { environment name: 'RemoveStack', value: 'true' }
      steps {
        script {
          try {
            dir("${OPSRepoBranch}") {
              sh "aws cloudformation delete-stack --stack-name ${StackName} --region us-east-1"
            }
            currentBuild.result = 'SUCCESS'
          }
          catch (err) {
            currentBuild.result = 'FAILURE'
            throw (err)
          }
          echo "result is: ${currentBuild.currentResult}"
        }
      }
    }
  }
}
